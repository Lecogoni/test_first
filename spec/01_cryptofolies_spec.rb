require_relative '../lib/01_cryptofolies'

describe "the caesar_cipher_char method" do
    it "should return the ASCII character of the first argument (indenter du second argument)" do
      expect(caesar_cipher_char('a',5)).to eq('f')
      expect(caesar_cipher_char('a',0)).to eq('a')
      expect(caesar_cipher_char('x',5)).to eq('c')
      expect(caesar_cipher_char('A',5)).to eq('F')
      expect(caesar_cipher_char('X',5)).to eq('C')
    end
  
    it "should error" do
        expect(caesar_cipher_char(1,5)).to eq("Ceci n'est pas une string")
    end
end


describe "The caesar_cipher method" do
    it "should split each character of a of string, place them in a array ... then execute the caesar_cipher_char method ... and join the result in a new string " do
        
      expect(caesar_cipher("What a string!", 5)).to eq("Bmfy f xywnsl!")
    #   expect(caesar_cipher()).to eq('a')
    #   expect(caesar_cipher()).to eq('c')
    #   expect(caesar_cipher()).to eq('F')
    #   expect(caesar_cipher()).to eq('C')
    end
  
    it "give an error message if first argument is not a string" do
        expect(caesar_cipher(1, 5)).to eq("Ceci n'est pas une string")
        expect(caesar_cipher(1.3, 5)).to eq("Ceci n'est pas une string")
    end
end


# tester string > convert 
# str > conversion ASCII 

#"je suis en 2015"

# ASCII string + argument 
# ASCII string renvoie en latin 

# verifier le loop et les A a 














































































































































































































































































































































